package com.haulmont.testtask.database;

import java.sql.*;
import java.util.ResourceBundle;

//Класс для работы с базой данных (HSQLDB)
//Шеюхин Данил Борисович
//danya.bob@gmail.com

public class DatabaseHelper {

    private static Connection connection = null;

    private DatabaseHelper() {
    }

    public static Connection getConnection() throws Exception {
        if (connection == null) {
            ResourceBundle resource = ResourceBundle.getBundle("database");
            String driver = resource.getString("db.driver");
            String url = resource.getString("db.url");
            String username = resource.getString("db.username");
            String password = resource.getString("db.password");

            Class.forName(driver);
            connection = DriverManager.getConnection(url, username, password);
            initDatabase();
        }
        return connection;
    }

    public static void closeConnection() throws SQLException {
        if (connection != null && !connection.isClosed()) {
            connection.close();
        }
    }

    private static void initDatabase() throws SQLException {
        try (Statement st = connection.createStatement()) {
            if (!tableExists("T_PATIENT")) {
                st.execute("create table T_PATIENT (" +
                        "ID bigint generated by default as identity" +
                        "(start with 1, increment by 1) not null primary key," +
                        "NAME nvarchar(32) not null," +
                        "SURNAME nvarchar(32) not null," +
                        "PATRONYMIC nvarchar(32) not null," +
                        "PHONE_NUMBER nvarchar(32) not null" +
                        ");");

                st.executeUpdate("INSERT INTO T_PATIENT(SURNAME, NAME, PATRONYMIC, PHONE_NUMBER) VALUES\n" +
                        "('Соболев', 'Илья', 'Викторович', '+79874565656');");
                st.executeUpdate("INSERT INTO T_PATIENT(SURNAME, NAME, PATRONYMIC, PHONE_NUMBER) VALUES\n" +
                        "('Коняхин', 'Александр', 'Андреевич', '+79874565456');");
                st.executeUpdate("INSERT INTO T_PATIENT(SURNAME, NAME, PATRONYMIC, PHONE_NUMBER) VALUES\n" +
                        "('Заречняк', 'Юрий', 'Евгеньевич', '+79874545454');");
                st.executeUpdate("INSERT INTO T_PATIENT(SURNAME, NAME, PATRONYMIC, PHONE_NUMBER) VALUES\n" +
                        "('Кутузова', 'Елена', 'Владимировна', '+79874595958');");
                st.executeUpdate("INSERT INTO T_PATIENT(SURNAME, NAME, PATRONYMIC, PHONE_NUMBER) VALUES\n" +
                        "('Белов', 'Артем', 'Евгеньевич', '+79874858595');");
                st.executeUpdate("INSERT INTO T_PATIENT(SURNAME, NAME, PATRONYMIC, PHONE_NUMBER) VALUES\n" +
                        "('Шеюхин', 'Данил', 'Борисович', '+79874465123');");
            }

            if (!tableExists("T_DOCTOR")) {
                st.execute("create table T_DOCTOR (" +
                        "ID bigint generated by default as identity" +
                        "(start with 1, increment by 1) not null primary key," +
                        "NAME nvarchar(32) not null," +
                        "SURNAME nvarchar(32) not null," +
                        "PATRONYMIC nvarchar(32) not null," +
                        "SPECIALIZATION nvarchar(32) not null" +
                        ");");

                st.executeUpdate("INSERT INTO T_DOCTOR(SURNAME, NAME, PATRONYMIC, SPECIALIZATION) VALUES\n" +
                        "('Коняхин', 'Андрей', 'Андреевич', 'Педиатр');");
                st.executeUpdate("INSERT INTO T_DOCTOR(SURNAME, NAME, PATRONYMIC, SPECIALIZATION) VALUES\n" +
                        "('Ковшов', 'Антон', 'Васильевич', 'Офтальмолог');");
                st.executeUpdate("INSERT INTO T_DOCTOR(SURNAME, NAME, PATRONYMIC, SPECIALIZATION) VALUES\n" +
                        "('Климова', 'Алена', 'Александровна', 'Терапевт');");
                st.executeUpdate("INSERT INTO T_DOCTOR(SURNAME, NAME, PATRONYMIC, SPECIALIZATION) VALUES\n" +
                        "('Шуткин', 'Игорь', 'Васильевич', 'Нейрохирург');");
                st.executeUpdate("INSERT INTO T_DOCTOR(SURNAME, NAME, PATRONYMIC, SPECIALIZATION) VALUES\n" +
                        "('Титов', 'Андрей', 'Васильевич', 'Уролог');");
                st.executeUpdate("INSERT INTO T_DOCTOR(SURNAME, NAME, PATRONYMIC, SPECIALIZATION) VALUES\n" +
                        "('Шеюхина', 'Евгения', 'Павловна', 'Гинеколог');");
                st.executeUpdate("INSERT INTO T_DOCTOR(SURNAME, NAME, PATRONYMIC, SPECIALIZATION) VALUES\n" +
                        "('Кутергин', 'Сергей', 'Витальевич', 'Хирург');");

            }

            if (!tableExists("T_RECEIPT")) {
                st.execute("create table T_RECEIPT (" +
                        "ID bigint generated by default as identity" +
                        "(start with 1, increment by 1) not null primary key," +
                        "DESCRIPTION nvarchar(160) not null," +
                        "PATIENT_ID bigint not null," +
                        "constraint FK_PATIENT_RECEIPT foreign key (PATIENT_ID) references T_PATIENT(ID) on delete restrict,\n" +
                        "DOCTOR_ID bigint not null," +
                        "constraint FK_DOCTOR_RECEIPT foreign key (DOCTOR_ID) references T_DOCTOR(ID) on delete restrict,\n" +
                        "CREATION_DATE date not null," +
                        "EXPIRE_DATE date not null," +
                        "PRIORITY nvarchar(32) not null " +
                        ");");

                st.executeUpdate("INSERT INTO T_RECEIPT(PATIENT_ID, DOCTOR_ID, DESCRIPTION, CREATION_DATE, EXPIRE_DATE, PRIORITY) " +
                        "VALUES (2, 4, 'Антигриппин', '2019-07-09', '2019-09-09', 'Немедленный');");
                st.executeUpdate("INSERT INTO T_RECEIPT(PATIENT_ID, DOCTOR_ID, DESCRIPTION, CREATION_DATE, EXPIRE_DATE, PRIORITY) " +
                        "VALUES (3, 7, 'Компресс', '1991-02-13', '1991-03-13', 'Нормальный');");
                st.executeUpdate("INSERT INTO T_RECEIPT(PATIENT_ID, DOCTOR_ID, DESCRIPTION, CREATION_DATE, EXPIRE_DATE, PRIORITY) " +
                        "VALUES (5, 4, 'Мирамистин', '2019-07-12', '2019-08-12', 'Срочный');");
                st.executeUpdate("INSERT INTO T_RECEIPT(PATIENT_ID, DOCTOR_ID, DESCRIPTION, CREATION_DATE, EXPIRE_DATE, PRIORITY) " +
                        "VALUES (6, 1, 'Виагра', '2019-07-12', '2019-08-12', 'Немедленный');");
                st.executeUpdate("INSERT INTO T_RECEIPT(PATIENT_ID, DOCTOR_ID, DESCRIPTION, CREATION_DATE, EXPIRE_DATE, PRIORITY) " +
                        "VALUES (1, 3, 'Морская соль', '2019-07-12', '2019-08-12', 'Нормальный');");
            }
        }
    }

    private static boolean tableExists(String tableName) throws SQLException {
        boolean isExists = false;
        try (ResultSet rs = connection.getMetaData().getTables(null, null, tableName, null)) {
            while (rs.next()) {
                String tn = rs.getString("TABLE_NAME");
                if (tn != null && tn.equals(tableName)) {
                    isExists = true;
                    break;
                }
            }
        }
        return isExists;
    }
}
